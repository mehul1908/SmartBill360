package com.smartbill360.service;

import java.sql.SQLException;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.smartbill360.entity.User;
import com.smartbill360.exception.UserAlreadyCreatedException;
import com.smartbill360.model.RegisterModel;
import com.smartbill360.repo.UserRepo;

import jakarta.validation.Valid;

@Service
public class UserService implements UserDetailsService{
	
	@Autowired
	private UserRepo userRepo;

	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		// TODO Auto-generated method stub
		Optional<User> userOp = this.getByEmail(username);
		if(userOp.isPresent())
			return userOp.get();
		throw new UsernameNotFoundException("Invalid Email Id");
	}
	
	public Optional<User> getByEmail(String username) {
		return userRepo.findById(username);
	}

	public User saveUser(@Valid RegisterModel model) throws UserAlreadyCreatedException {
		Optional<User> userOp = this.getByEmail(model.getEmail());
		if(userOp.isPresent()) {
			String message = "User with email id "+model.getEmail()+" is already created";
			throw new UserAlreadyCreatedException(message);
		}
		try {
			User user = new User(model.getEmail(), model.getPassword(), model.getRole());
			userRepo.save(user);
			return user;
		}
		catch(Exception ex) {
			throw ex;
		}
	}

}
